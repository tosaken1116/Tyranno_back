services:
  db:
    image: postgres:16.0-alpine
    container_name: nnyd-db
    hostname: nnyd-db
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      - ./data:/db/conf/
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U" , $POSTGRES_USER, "-d", $POSTGRES_DB ]
      interval: 1s
      timeout: 3s
      retries: 30

  api:
    build:
      context: .
      target: dev
    container_name: nnyd-backend
    hostname: nnyd-backend
    working_dir: /opt/nnyd
    volumes:
      - .:/opt/nnyd
    ports:
      - ${PORT:-8080}:${PORT:-8080}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  adminer:
    container_name: nnyd-adminer
    hostname: nnyd-adminer
    image: adminer:latest
    restart: always
    ports:
      - 8081:8080
    depends_on:
      db:
        condition: service_healthy

volumes:
  db-data: null
